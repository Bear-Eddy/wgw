// Components/RecorderSection.tsx
import React from 'react';
import { View, Text, ScrollView, TouchableOpacity } from 'react-native';
import { VoiceRecorder } from './VoiceRecorder';
import { CategorySlider } from './CategorySlider';

interface RecorderSectionProps {
  selectedCategory: string;
  categories: string[];
  isProcessing: boolean;
  isDarkMode: boolean;
  onRecordingComplete: (audioUri: string) => void;
  onCategorySelect: (category: string, index: number) => void;
  onProcessingChange: (processing: boolean) => void;
  scrollViewRef: React.RefObject<ScrollView>;
  todaysCategory: string;
  hasWeeklyEntry: (category: string) => boolean;
  handleScrollEnd: (event: any) => void;
}

export const RecorderSection: React.FC<RecorderSectionProps> = ({
  // ... props
}) => {
  const styles = getStyles(isDarkMode);

  return (
    <View style={styles.recorderContainer}>
      <View style={styles.recorderHeader}>
        <Text style={styles.recorderTitle}>What's Going Well?</Text>
        <Text style={styles.recorderSubtitle}>
          The question that changes everything
        </Text>
      </View>

      <VoiceRecorder
        onTranscriptionComplete={onRecordingComplete}
        selectedCategory={selectedCategory}
        isProcessing={isProcessing}
        onProcessingChange={onProcessingChange}
        isDarkMode={isDarkMode}
        isLocked={true}
      />

      <CategorySlider
        categories={categories}
        selectedCategory={selectedCategory}
        todaysCategory={todaysCategory}
        hasWeeklyEntry={hasWeeklyEntry}
        onCategorySelect={onCategorySelect}
        onScrollEnd={handleScrollEnd}
        scrollViewRef={scrollViewRef}
        isDarkMode={isDarkMode}
        isInRecorder={true}
      />

      {isProcessing && (
        <View style={styles.processingContainer}>
          <Text style={styles.processingText}>Processing your entry...</Text>
          <Text style={styles.processingSubtext}>
            Our AI is reflecting on what's going well for you
          </Text>
        </View>
      )}
    </View>
  );
};